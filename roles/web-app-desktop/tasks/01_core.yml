- name: "Load brand logos role for '{{ application_id }}'"
  include_role:
    name: web-svc-simpleicons
  vars:
    flush_handlers: true
  when:
    - run_once_web_svc_simpleicons is not defined
    - DESKTOP_SIMPLEICONS_ENABLED | bool

- name: "Validate configuration"
  include_tasks: "02_validate.yml"
  when: MODE_ASSERT | bool

- name: "Include JS routines"
  include_tasks: "03_javascript.yml"

- name: "load docker, proxy for '{{ application_id }}'"
  include_role:
    name: sys-stk-full-stateless
  vars:
    docker_compose_flush_handlers: false

- name: "Check if host-specific config.yaml exists in {{ DESKTOP_CONFIG_INV_PATH }}"
  stat:
    path: "{{ DESKTOP_CONFIG_INV_PATH }}"
  delegate_to: localhost
  become: false
  register: config_file

- name: Load menu categories
  include_vars:
    file: "menu_categories.yml"

- name: Load docker cards
  set_fact:
    portfolio_cards: "{{ lookup('docker_cards', 'roles') }}"

- name: "Load Desktop Brand logos"
  set_fact:
    portfolio_cards: "{{ portfolio_cards | add_simpleicon_source(domains, WEB_PROTOCOL) }}"
  when: DESKTOP_SIMPLEICONS_ENABLED | bool
  changed_when: false

- name: Group docker cards
  set_fact:
    portfolio_menu_data: "{{ lookup('docker_cards_grouped', portfolio_cards, portfolio_menu_categories) }}"

- name: Copy host-specific config.yaml if it exists
  template:
    src: "{{ DESKTOP_CONFIG_INV_PATH }}"
    dest: "{{ DESKTOP_CONFIG_YML_DEST }}"
  notify: docker compose up
  when: config_file.stat.exists

- name: Copy default config.yaml from the role template if host-specific file does not exist
  template:
    src: "{{ DESKTOP_CONFIG_YML_SRC_FILE }}"
    dest: "{{ DESKTOP_CONFIG_YML_DEST }}"
  notify: docker compose up
  when: not config_file.stat.exists

- name: "Flush docker compose handlers"
  meta: flush_handlers

- name: Wait for Desktop HTTP endpoint (required so all logos can be downloaded during initialization)
  uri:
    url: "http://127.0.0.1:{{ http_port }}/"
    status_code: 200
  register: desktop_http
  retries: 60
  delay: 5
  until: desktop_http.status == 200

- include_tasks: utils/run_once.yml