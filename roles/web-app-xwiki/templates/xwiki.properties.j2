# Proxy
xwiki.url.protocol={{ WEB_PROTOCOL }}
xwiki.url.host={{ domain }}
xwiki.url.port={{ WEB_PORT }}

############################################
# OIDC
# Render this block only while the OIDC switch is ON in _flush_config.yml.
# During bootstrap we keep it OFF to avoid ClassNotFoundException before the extension is installed.
{% if xwiki_oidc_enabled_switch | bool %}
oidc.showLoginButton=true
oidc.provider={{ XWIKI_OIDC_PROVIDER }}
oidc.endpoint.authorization={{ XWIKI_OIDC_AUTHORIZATION }}
oidc.endpoint.token={{ XWIKI_OIDC_TOKEN }}
oidc.endpoint.userinfo={{ XWIKI_OIDC_USERINFO }}
oidc.endpoint.logout={{ XWIKI_OIDC_LOGOUT }}
oidc.clientid={{ XWIKI_OIDC_CLIENT_ID }}
oidc.secret={{ XWIKI_OIDC_CLIENT_SECRET }}
oidc.scope={{ XWIKI_OIDC_SCOPES }}
oidc.enableUser=true
oidc.userinfoclaims={{ XWIKI_OIDC_GROUPS_CLAIM }}
oidc.groups.claim={{ XWIKI_OIDC_GROUPS_CLAIM }}
oidc.groups.mapping=XWiki.XWikiAdminGroup={{ XWIKI_OIDC_ADMIN_PROVIDER_GROUP }}
{% endif %}

# Start DW automatically and non-interactively
distribution.automaticStartOnMainWiki=true
distribution.automaticStartOnWiki=true
distribution.job.interactive=false
# Default flavor for main wiki
distribution.defaultUI=org.xwiki.platform:xwiki-platform-distribution-flavor-mainwiki
distribution.skip=false
distribution.wizard.enabled=true

{% if MODE_DEBUG | bool %}
# Root logger
logging.rootLogger=DEBUG, console

# XWiki OIDC extension
logging.logger.org.xwiki.contrib.oidc=TRACE
logging.logger.org.xwiki.contrib.oidc.internal=TRACE
logging.logger.org.xwiki.contrib.oidc.provider=TRACE

# OIDC extra (sometimes split in other packages)
logging.logger.org.xwiki.contrib.oidc.auth=TRACE
logging.logger.org.xwiki.contrib.oidc.client=TRACE

# Tomcat internals (servlet and HTTP handling)
logging.logger.org.apache.catalina.core=DEBUG
logging.logger.org.apache.coyote.http11=DEBUG

# Request/Resource handling
logging.logger.org.xwiki.resource=TRACE
logging.logger.org.xwiki.resource.internal=TRACE
logging.logger.org.xwiki.container.servlet=DEBUG

# Nimbus OIDC/OAuth + JOSE libraries
logging.logger.com.nimbusds=DEBUG
logging.logger.com.nimbusds.oauth2.sdk=DEBUG
logging.logger.com.nimbusds.openid.connect.sdk=DEBUG
logging.logger.com.nimbusds.jose=DEBUG

# Apache HttpClient (used under the hood by Nimbus)
logging.logger.org.apache.http=DEBUG
logging.logger.org.apache.http.wire=DEBUG   # very verbose, raw request/response wire logs

# Pac4j (if your build uses it)
logging.logger.org.pac4j=DEBUG
{% endif %}

# Persist data in the Docker volume
environment.permanentDirectory={{ XWIKI_DOCK_DATA_DIR }}

# Make sure Extension Manager can fetch artifacts.
# IMPORTANT:
# - Java .properties does NOT support "+=" append. Only the LAST assignment wins.
# - Use a SINGLE line with comma-separated repositories.
# - The OIDC authenticator lives in xwiki-public. Without it, resolution fails.
extension.repositories=xwiki-public:maven:https://nexus.xwiki.org/nexus/content/groups/public/,central:maven:https://repo1.maven.org/maven2/
