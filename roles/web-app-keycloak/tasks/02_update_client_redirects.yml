---
# Update redirectUris/webOrigins per kcadm.sh — no defaults used.

# ── REQUIRED VARS (must be provided by caller) ───────────────────────────────
# - WEB_PROTOCOL                        e.g. "https"
# - KEYCLOAK_REALM                      target realm name
# - KEYCLOAK_SERVER_HOST_URL            e.g. "http://127.0.0.1:8080"
# - KEYCLOAK_SERVER_INTERNAL_URL        e.g. "http://127.0.0.1:8080"
# - KEYCLOAK_EXEC_KCADM                 e.g. "docker exec -i keycloak /opt/keycloak/bin/kcadm.sh"
# - KEYCLOAK_MASTER_API_USER_NAME
# - KEYCLOAK_MASTER_API_USER_PASSWORD
# - KEYCLOAK_CLIENT_ID                 clientId to update (e.g. same as realm or an app client)
# - domains                             your domain map
# - applications                        your applications map

- name: "Assert required variables are present (no defaults allowed)"
  assert:
    that:
      - WEB_PROTOCOL is defined
      - KEYCLOAK_REALM is defined
      - KEYCLOAK_SERVER_HOST_URL is defined
      - KEYCLOAK_SERVER_INTERNAL_URL is defined
      - KEYCLOAK_EXEC_KCADM is defined
      - KEYCLOAK_MASTER_API_USER_NAME is defined
      - KEYCLOAK_MASTER_API_USER_PASSWORD is defined
      - KEYCLOAK_CLIENT_ID is defined
      - KEYCLOAK_REDIRECT_FEATURES is defined
      - domains is defined
      - applications is defined
    fail_msg: "Missing required variable(s). Provide all vars listed at the top of 02_update_client_redirects.yml."

- name: "kcadm login"
  no_log: "{{ MASK_CREDENTIALS_IN_LOGS | bool }}"
  shell: >
    {{ KEYCLOAK_EXEC_KCADM }} config credentials
    --server {{ KEYCLOAK_SERVER_INTERNAL_URL }}
    --realm master
    --user {{ KEYCLOAK_MASTER_API_USER_NAME }}
    --password {{ KEYCLOAK_MASTER_API_USER_PASSWORD }}
  changed_when: false

- name: "Resolve client internal id for {{ KEYCLOAK_CLIENT_ID }}"
  shell: >
    {{ KEYCLOAK_EXEC_KCADM }} get clients
    -r {{ KEYCLOAK_REALM }}
    --query 'clientId={{ KEYCLOAK_CLIENT_ID }}'
    --fields id --format json | jq -r '.[0].id'
  register: kc_client
  changed_when: false

- name: "Fail if client not found"
  assert:
    that: kc_client.stdout is match('^[0-9a-f-]+$')
    fail_msg: "Client '{{ KEYCLOAK_CLIENT_ID }}' not found in realm '{{ KEYCLOAK_REALM }}'."

- name: "Read current client configuration"
  shell: >
    {{ KEYCLOAK_EXEC_KCADM }} get clients/{{ kc_client.stdout }}
    -r {{ KEYCLOAK_REALM }} --format json
  register: kc_client_obj
  changed_when: false

- name: "Normalize current vs desired for comparison"
  set_fact:
    kc_current_redirect_uris:     "{{ (kc_client_obj.stdout | from_json).redirectUris | sort }}"
    kc_current_web_origins:       "{{ (kc_client_obj.stdout | from_json).webOrigins  | sort }}"
    kc_current_logout_uris: >-
      {{
        (
          (kc_client_obj.stdout | from_json).attributes['post.logout.redirect.uris']
          if 'post.logout.redirect.uris' in (kc_client_obj.stdout | from_json).attributes
          else ''
        )
        | regex_replace('\r','')
        | split('\n')
        | reject('equalto','')
        | list | sort
      }}
    kc_desired_redirect_uris:     "{{ KEYCLOAK_REDIRECT_URIS | sort }}"
    kc_desired_web_origins:       "{{ KEYCLOAK_WEB_ORIGINS  | sort }}"
    KEYCLOAK_POST_LOGOUT_URIS_list: >-
      {{ "+" | split('\n') | reject('equalto','') | list | sort }}

- name: "Extract current frontchannel logout url"
  set_fact:
    kc_current_frontchannel_logout_url: >-
      {{
        (
          (kc_client_obj.stdout | from_json).attributes['frontchannel.logout.url']
          if 'frontchannel.logout.url' in (kc_client_obj.stdout | from_json).attributes
          else ''
        )
      }}

- name: "Update client with redirectUris, webOrigins, frontchannelLogout"
  shell: >
    {{ KEYCLOAK_EXEC_KCADM }} update clients/{{ kc_client.stdout }}
    -r {{ KEYCLOAK_REALM }}
    -s 'redirectUris={{ KEYCLOAK_REDIRECT_URIS | to_json }}'
    -s 'webOrigins={{ KEYCLOAK_WEB_ORIGINS | to_json }}'
    -s 'frontchannelLogout=true'
    -s 'attributes."frontchannel.logout.url"={{ KEYCLOAK_FRONTCHANNEL_LOGOUT_URL | to_json }}'
  when: kc_current_redirect_uris != kc_desired_redirect_uris
        or kc_current_web_origins  != kc_desired_web_origins
        or kc_current_frontchannel_logout_url != KEYCLOAK_FRONTCHANNEL_LOGOUT_URL
  async: "{{ ASYNC_TIME if ASYNC_ENABLED | bool else omit }}"
  poll:  "{{ ASYNC_POLL if ASYNC_ENABLED | bool else omit }}"

